<?xml version="1.0" encoding="UTF-8" standalone="no"?><web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.5" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>Fave100</display-name>
	
	<!-- Servlets -->
	<filter>
        <filter-name>appstats</filter-name>
        <filter-class>com.google.appengine.tools.appstats.AppstatsFilter</filter-class>
        <init-param>
        	<param-name>calculateRpcCosts</param-name>
          	<param-value>true</param-value>
     	</init-param>
        
    </filter>

	<!--  AppEngine Stats -->
    <filter-mapping>
        <filter-name>appstats</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <servlet>
        <servlet-name>appstats</servlet-name>
        <servlet-class>com.google.appengine.tools.appstats.AppstatsServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>appstats</servlet-name>
        <url-pattern>/appstats/*</url-pattern>
    </servlet-mapping>
    
    <!--  Clean up expired sessions -->
    <servlet>
	  	<servlet-name>cron_sessioncleanup</servlet-name>
	  	<servlet-class>com.google.apphosting.utils.servlet.SessionCleanupServlet</servlet-class>
	</servlet>
	 
	<servlet-mapping>
	  	<servlet-name>cron_sessioncleanup</servlet-name>
	 	<url-pattern>/cron/sessioncleanup</url-pattern>
	</servlet-mapping>
	
	<!-- Avatar upload -->
	<servlet>
	  	<servlet-name>avatarUpload</servlet-name>
	  	<servlet-class>com.fave100.server.servlets.AvatarUploadServlet</servlet-class>
	</servlet>
	 
	<servlet-mapping>
	  	<servlet-name>avatarUpload</servlet-name>
	 	<url-pattern>/avatarUpload</url-pattern>
	</servlet-mapping>
	
	<!-- Stop unauthorized access to stats -->

    <security-constraint>
        <web-resource-collection>
            <url-pattern>/appstats/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>
    
    <!-- Stop unauthorized access to cron jobs -->
    <security-constraint>
        <web-resource-collection>
            <url-pattern>/cron/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>
    
    <!-- Stop unauthorized access to tasks -->
    <security-constraint>
	    <web-resource-collection>
	        <web-resource-name>tasks</web-resource-name>
	        <url-pattern>/tasks/*</url-pattern>
	    </web-resource-collection>
	    <auth-constraint>
	        <role-name>admin</role-name>
	    </auth-constraint>
	</security-constraint>
	  
	<!-- Default page to serve -->
	<welcome-file-list>
		<welcome-file>Fave100.html</welcome-file>
	</welcome-file-list>

	<!--
		This Guice listener hijacks all further filters and servlets. Extra
		filters and servlets have to be configured in your
		ServletModule#configureServlets() by calling
		serve(String).with(Class<? extends HttpServlet>) and
		filter(String).through(Class<? extends Filter)
	-->
	<listener>
		<listener-class>com.fave100.server.guice.GuiceServletConfig</listener-class>
	</listener>

	<filter>
		<filter-name>guiceFilter</filter-name>
		<filter-class>com.google.inject.servlet.GuiceFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>guiceFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

  <servlet>
    <servlet-name>SystemServiceServlet</servlet-name>
    <servlet-class>com.google.api.server.spi.SystemServiceServlet</servlet-class>
    <init-param>
      <param-name>services</param-name>
      <param-value>com.fave100.server.domain.favelist.Fave100Api</param-value>
    </init-param>
  </servlet>

  <servlet-mapping>
    <servlet-name>SystemServiceServlet</servlet-name>
    <url-pattern>/_ah/spi/*</url-pattern>
  </servlet-mapping>

</web-app>